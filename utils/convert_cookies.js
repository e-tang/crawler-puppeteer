/**
 * @file convert_cookies.js
 * @description Converts cookies from JSON format to a string format suitable for use in HTTP requests.
 * @author eric
 */

/** 
 * Sample cookie json
 * [
{
    "domain": ".x.com",
    "expirationDate": 1744792035.388044,
    "hostOnly": false,
    "httpOnly": true,
    "name": "__cf_bm",
    "path": "/",
    "sameSite": "no_restriction",
    "secure": true,
    "session": false,
    "storeId": "0",
    "value": "nYBQSnIvIpDxQpH9pMMGPnuUUuwOOlneAvVniLg0tRI-1744790235-1.0.1.1-AT9WpkiR2UzYjkLhy5WS6YyhpfrAi.V0lZiBQ5r5OLzn2lE0jKNtrDKhNSW_o.SC3xvDGTDBtQrHoBE9IITr_pVPDx7TT16lKzJqIuCudgs",
    "id": 1
},
...]
 */

var Params = require('node-programmer/params');

var params = new Params({
});

var opts = params.getOpts();
var optCount = params.getOptCount();

var inputs =  opts["---"];

function convertToNetscapeFormat(cookies) {
    let netscapeCookies = "# Netscape HTTP Cookie File\n";
    netscapeCookies += "# http://curl.haxx.se/docs/http-cookies.html\n";
    netscapeCookies += "# This file was generated by tyo-crawler\n";
    
    for (const cookie of cookies) {
        let domain = cookie.domain;
        let flag = cookie.hostOnly ? "FALSE" : "TRUE";
        let path = cookie.path;
        let secure = cookie.secure ? "TRUE" : "FALSE";
        if (cookie.session) {
            expires = 0;
        } else {
            // Convert expirationDate to a valid Unix timestamp (seconds)
            if (typeof cookie.expirationDate === 'number') {
                expires = Math.floor(cookie.expirationDate); // Remove the fractional part
            } else {
                expires = 0; // Default to session cookie if not a number
                console.warn(`Invalid expirationDate for cookie ${cookie.name} in domain ${cookie.domain}. Setting as session cookie.`);
            }
        }
        let name = cookie.name;
        let value = cookie.value;

        netscapeCookies += `${domain}\t${flag}\t${path}\t${secure}\t${expires}\t${name}\t${value}\n`;
    }
    return netscapeCookies;
}

if (optCount === 0) {
    console.error("No input files specified. Please provide JSON files containing cookies.");
    process.exit(1);
}

for (let file of inputs) {
    var fs = require('fs');
    var path = require('path');

    // Read the file
    var data = fs.readFileSync(file, 'utf8');
    // Parse the JSON data
    var cookies = JSON.parse(data);
    // Convert the cookies to Netscape formatted

    // Read the file
    try {
        var data = fs.readFileSync(file, 'utf8');
        // Parse the JSON data
        var cookies = JSON.parse(data);
        // Convert the cookies to Netscape formatted
        var netscapeFormattedCookies = convertToNetscapeFormat(cookies);
        // Print the Netscape formatted cookies to the console
        console.log(netscapeFormattedCookies);
    }
    catch (err) {
        console.error("Error reading or parsing file:", file, err);
    }    
}